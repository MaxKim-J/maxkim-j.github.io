{"version":3,"file":"component---src-pages-index-tsx-dcbe9a9d2c6d68a4e090.js","mappings":"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","sources":["webpack://max-kim-tech-blog/./src/components/@layout/Header/CategorySelect.tsx","webpack://max-kim-tech-blog/./src/components/@layout/Header/MainHeader.tsx","webpack://max-kim-tech-blog/./src/components/@pages/home/PostList.tsx","webpack://max-kim-tech-blog/./src/pages/index.tsx","webpack://max-kim-tech-blog/./src/styles/global.ts"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { styled } from '../../../styles/stitches';\nimport { categoryContext } from '../../../context/categoryContext';\n\nconst categories = ['all', 'tech', 'essay', 'review'];\n\nfunction CategorySelect() {\n  const { setCategory, category } = useContext(categoryContext);\n  const [categoryValue, setCategoryValue] = useState(category);\n\n  return (\n    <StyledSelect\n      aria-label=\"카테고리를 선택하면 아래 포스트 목록을 카테고리에 따라 보실 수 있어요\"\n      name=\"category\"\n      value={categoryValue}\n      onChange={(e) => {\n        const value = e.target.value as unknown as any;\n        setCategoryValue(value);\n        setCategory(value as any);\n      }}\n    >\n      {categories.map((category) => (\n        <option key={category} value={category}>\n          {category}\n        </option>\n      ))}\n    </StyledSelect>\n  );\n}\n\nconst StyledSelect = styled('select', {\n  cursor: 'pointer',\n  fontSize: '14px',\n});\n\nexport default CategorySelect;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { styled } from '../../../styles/stitches';\n\nimport ThemeSelect from './ThemeSelect';\nimport CategorySelect from './CategorySelect';\n\nfunction MainHeader() {\n  return (\n    <MainHeaderWrapper>\n      <TitleSection>\n        <Link to=\"/\">\n          <TitleWrapper aria-label=\"블로그 타이틀\">\n            <div>김맥스 블로그</div>\n          </TitleWrapper>\n        </Link>\n        <SubTitleWrapper aria-label=\"블로그 서브 타이틀\">\n          <div>그때그때 필요한 엔지니어링</div>\n          <div>기록이 필요한 생각과 경험들</div>\n        </SubTitleWrapper>\n      </TitleSection>\n      <NavSection>\n        <LeftSide>\n          <div>\n            <Link to=\"/pic\" aria-label=\"제가 찍은 사진들이 있는 페이지로 이동해요\">\n              pic\n            </Link>\n          </div>\n          <div>\n            <Link to=\"/about\" aria-label=\"제가 누구인지 보실 수 있는 페이지로 이동해요\">\n              about\n            </Link>\n          </div>\n          <div>\n            <Link to=\"/rss.xml\" aria-label=\"rss 페이지로 이동해요\">\n              rss\n            </Link>\n          </div>\n        </LeftSide>\n        <RightSide>\n          <div>theme</div>\n          <ThemeSelect pos=\"main\" />\n          <div>filter</div>\n          <CategorySelect />\n        </RightSide>\n      </NavSection>\n    </MainHeaderWrapper>\n  );\n}\n\nconst MainHeaderWrapper = styled('div', {\n  marginBottom: '70px',\n});\n\nconst TitleSection = styled('section', {});\n\nconst TitleWrapper = styled('div', {\n  marginBottom: '16px',\n  '&>div': {\n    fontSize: '$mainTitle',\n    fontWeight: '$bold',\n    '@mobile': {\n      fontSize: '$subTitle',\n    },\n  },\n});\n\nconst SubTitleWrapper = styled(TitleWrapper, {\n  lineHeight: 1.3,\n  marginBottom: '38px',\n});\n\nconst NavSection = styled('nav', {\n  display: 'flex',\n  justifyContent: 'space-between',\n  '@mobile': {\n    display: 'block',\n  },\n});\n\nconst LeftSide = styled('section', {\n  display: 'flex',\n  minWidth: '180px',\n  '&>div': {\n    marginRight: '20px',\n  },\n});\n\nconst RightSide = styled('section', {\n  marginBottom: '28px',\n  display: 'flex',\n  '&>div': {\n    marginRight: '4px',\n  },\n\n  '@mobile': {\n    marginTop: '12px',\n    marginBottom: 0,\n  },\n});\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { Link } from 'gatsby';\n\nimport { styled } from '../../../styles/stitches';\nimport { categoryContext } from '../../../context/categoryContext';\nimport { type PostList as PostListType } from '../../../types';\n\ninterface Props {\n  postList: PostListType;\n}\n\nfunction PostList({ postList }: Props) {\n  const { category } = useContext(categoryContext);\n\n  const refinedPostList = postList.filter(({ frontmatter }) => {\n    if (category === 'all') {\n      return frontmatter.category !== null;\n    }\n    return frontmatter.category === category;\n  });\n\n  return (\n    <ListItemRoot aria-label=\"포스트 목록\">\n      {refinedPostList.length ? (\n        refinedPostList.map(({ id, frontmatter, slug }) => (\n          <Link to={`/posts/${slug}`} key={id}>\n            <section>\n              <ListItem>\n                <ListItemTitle>{frontmatter.title}</ListItemTitle>\n                <ListItemDescription>\n                  {frontmatter.date} - {frontmatter.description}\n                </ListItemDescription>\n              </ListItem>\n            </section>\n          </Link>\n        ))\n      ) : (\n        <div>No post</div>\n      )}\n    </ListItemRoot>\n  );\n}\n\nconst ListItemRoot = styled('ol', {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-end',\n  '@mobile': {\n    alignItems: 'flex-start',\n  },\n});\n\nconst ListItem = styled('li', {\n  margin: '24px 0',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-end',\n  lineHeight: 1.2,\n  '@mobile': {\n    alignItems: 'flex-start',\n  },\n});\n\nconst ListItemTitle = styled('span', {\n  fontSize: '$subTitle',\n  fontWeight: '$bold',\n  '@mobile': {\n    fontSize: '$mobileTitle',\n  },\n});\n\nconst ListItemDescription = styled('span', {\n  fontSize: '$description',\n  marginTop: '6px',\n  '@mobile': {\n    fontSize: '12px',\n  },\n});\n\nexport default PostList;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport globalStyle from '../styles/global';\n\nimport MainLayout from '../components/@layout/MainLayout';\nimport MainHeader from '../components/@layout/Header/MainHeader';\nimport Footer from '../components/@layout/Footer';\nimport PostListView from '../components/@pages/home/PostList';\nimport MetaHead from '../components/@fundamentals/MetaHead';\nimport { type PostList } from '../types';\n\nexport interface Props {\n  data: {\n    allMdx: {\n      nodes: PostList;\n    };\n  };\n}\n\nconst IndexPage = ({ data }: Props) => {\n  globalStyle();\n\n  return (\n    <MainLayout header={<MainHeader />} footer={<Footer />}>\n      <PostListView postList={data.allMdx.nodes} />\n    </MainLayout>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query SITE_INDEX_QUERY {\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY년 MM월 DD일\")\n          description\n          tags\n          category\n        }\n        slug\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return <MetaHead />;\n};\n","import { globalCss } from './stitches';\n\n// default\nconst globalStyles = globalCss({\n  '*': {\n    fontFamily: 'Pretendard',\n  },\n  'body': { overflowX: 'hidden' },\n  'p, body': { margin: 0, padding: 0, fontSize: '$body1' },\n  strong: { fontWeight: '$bold' },\n  a: {\n    textDecoration: 'none',\n    '&:link': {\n      color: '$black',\n    },\n    '&:visited': {\n      color: '$black',\n    },\n  },\n  img: { width: '100%', height: 'auto' },\n  ol: {\n    listStyleType: 'none',\n    marginBlockStart: 0,\n    marginBlockEnd: 0,\n    marginInlineStart: 0,\n    marginInlineEnd: 0,\n    paddingInlineStart: 0,\n  },\n  h1: {\n    fontSize: '$heading1',\n    fontWeight: '$bold',\n    a: {\n      textDecoration: 'underline',\n    }\n  },\n  h2: {\n    fontSize: '$heading2',\n    fontWeight: '$bold',\n    a: {\n      textDecoration: 'underline',\n    }\n  },\n  h3: {\n    fontSize: '$heading3',\n    fontWeight: '$bold',\n    a: {\n      textDecoration: 'underline',\n    }\n  },\n  h4: {\n    fontSize: '$heading4',\n    fontWeight: '$bold',\n    a: {\n      textDecoration: 'underline',\n    }\n  },\n  h5: {\n    fontSize: '$heading5',\n    fontWeight: '$bold',\n    a: {\n      textDecoration: 'underline',\n    }\n  },\n});\n\nexport default globalStyles;\n"],"names":["categories","StyledSelect","styled","cursor","fontSize","useContext","categoryContext","setCategory","category","useState","categoryValue","setCategoryValue","React","name","value","onChange","e","target","map","key","MainHeaderWrapper","marginBottom","TitleSection","TitleWrapper","fontWeight","SubTitleWrapper","lineHeight","NavSection","display","justifyContent","LeftSide","minWidth","marginRight","RightSide","marginTop","Link","to","ThemeSelect","pos","CategorySelect","ListItemRoot","flexDirection","alignItems","ListItem","margin","ListItemTitle","ListItemDescription","postList","refinedPostList","filter","frontmatter","length","id","slug","title","date","description","data","globalStyle","MainLayout","header","MainHeader","footer","Footer","PostListView","allMdx","nodes","Head","MetaHead","globalStyles","globalCss","fontFamily","overflowX","padding","strong","a","textDecoration","color","img","width","height","ol","listStyleType","marginBlockStart","marginBlockEnd","marginInlineStart","marginInlineEnd","paddingInlineStart","h1","h2","h3","h4","h5"],"sourceRoot":""}