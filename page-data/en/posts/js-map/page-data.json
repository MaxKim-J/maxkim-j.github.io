{"componentChunkName":"component---src-pages-en-posts-mdx-frontmatter-slug-tsx","path":"/en/posts/js-map/","result":{"data":{"post":{"id":"f17c57d7-8dba-587f-9b86-192dd95a50d3","slug":"js-map-en","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JavaScript Map Objects (Map Object)\",\n  \"description\": \"An introduction to map objects in JS.\",\n  \"date\": \"2020-03-29T00:00:00.000Z\",\n  \"category\": \"tech\",\n  \"slug\": \"js-map\",\n  \"tags\": [\"Javascript\"],\n  \"lang\": \"en\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When you're developing an app in JavaScript, you're probably familiar with the Object data type, and the ability to store and retrieve values as keys and values is something you'll use in any app. In this post, we're going to look at an ES6 syntax that allows you to use JavaScript objects in a more subtle way: Map objects.\"), mdx(\"h2\", {\n    \"id\": \"map-object-methods\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#map-object-methods\",\n    \"aria-label\": \"map object methods permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Map Object Methods\"), mdx(\"p\", null, \"Unlike traditional objects, map objects only use methods to add and subtract values. By default, you can insert, get, and delete with the following methods\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\",\n    \"theme\": \"one-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"let max = new Map();\\n\\n// Insert into a map object with set\\nmax.set('id', 0);\\nmax.set('name', 'Michael');\\nmax.set('major', 'English Literature');\\nmax.set('age', 25);\\n\\n// You can also pass it as a two-dimensional array\\nlet michael = new Map([\\n  ['id', 0],\\n  ['name', 'Michael'],\\n  ['major', 'English Literature'],\\n  ['age', 29],\\n]);\\n\\n// Get a map object with get\\nmax.get('name'); // \\\"Michael\\\"\\n\\n// Delete with delete\\nmax.delete('age'); // return true if delete succeeds\\n\\n// delete all properties in the map with clear\\nmax.clear();\"), \"\\n        \"), mdx(\"p\", null, \"You can write other methods as well. Unlike objects, which have very limited methods, map objects provide a rich set of methods. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Map\"\n  }, \"here\"), \" for other methods of map objects!\"), mdx(\"h2\", {\n    \"id\": \"advantages-of-map-objects\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#advantages-of-map-objects\",\n    \"aria-label\": \"advantages of map objects permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Advantages of Map Objects\"), mdx(\"h3\", {\n    \"id\": \"non-string-values-can-be-used-as-keys\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#non-string-values-can-be-used-as-keys\",\n    \"aria-label\": \"non string values can be used as keys permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Non-string values can be used as keys\"), mdx(\"p\", null, \"With objects, only strings or symbols can be used as keys for properties. With map objects, any type of data, including functions and objects, can be used as keys for properties.\"), mdx(\"p\", null, \"Sometimes it's easier to see when the key is a Number rather than a string. For example, consider an object and a map object that hold information about the message to output based on an error code.\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\",\n    \"theme\": \"one-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"const errorMessageObj = {\\n  404: \\\"The page is missing\\\",\\n  500: \\\"Server error\\\",\\n  401: \\\"You are not authorized\\\"\\n}\\n\\nconst errorMessageMap = new Map([\\n  [404, \\\"Page not found\\\"],\\n  [500, \\\"Server error\\\"],\\n  [401, \\\"You are not authorized\\\"],\\n])\\n\\nerrorMessageObj.404 // unexpected number error\\nerrorMessageObj[\\\"404\\\"] // 'Page not found'\\nerrorMessageMap.get(404) // 'Page not found'\"), \"\\n        \"), mdx(\"p\", null, \"objects can only be retrieved via string, and entering a number after the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".\"), \" will result in an error. However, with a map object, you can pass a number as an argument to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"get\"), \" method and see that the value is retrieved correctly.\"), mdx(\"h3\", {\n    \"id\": \"clarity-of-method-usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#clarity-of-method-usage\",\n    \"aria-label\": \"clarity of method usage permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Clarity of method usage\"), mdx(\"p\", null, \"Once you're working with map objects, you can modify or retrieve the properties contained within them \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"just by using methods\"), \" without having to access them with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[]\"), \" like you would an object. The names of the methods (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"set\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"get\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"delete\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"clear\"), \") are very descriptive of what to do with a map object, and are a more accurate representation of behavior and intent than objects.\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\",\n    \"theme\": \"one-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"let maxInfoObj = {\\n  name: '\\uAE40\\uB9E5\\uC2A4',\\n  age: '25',\\n  major: 'English Literature',\\n};\\n\\nconst maxInfoMap = new Map([\\n  ['name', '\\uAE40\\uB9E5\\uC2A4'],\\n  ['age', 25],\\n  ['major', 'English Literature'],\\n]);\\n\\n// Object: initialize with an empty object by declaring it with let and assigning it an empty object\\nmaxInfoObj = {};\\n\\n// Map object: initialize as an empty map object using the clear method\\nmaxInfoMap.clear();\"), \"\\n        \"), mdx(\"p\", null, \"I'm particularly impressed by the provision of methods like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"clear\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"delete\"), \" to explicitly clear the properties of a map. This makes the developer's intentions clearer than just allocating an empty object on deletion, as is the case with objects.\"), mdx(\"h3\", {\n    \"id\": \"clean-traversal\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#clean-traversal\",\n    \"aria-label\": \"clean traversal permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Clean traversal\"), mdx(\"p\", null, \"Map objects are themselves traversable via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"for..of\"), \" statements. This traversal takes the form of a map iterator. A map iterator is an array of key-value pairs. You can see the map iterator with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"entries\"), \" method.\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\",\n    \"theme\": \"one-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"const maxInfoMap = new Map([\\n  ['name', 'KimMax'],\\n  ['age', 25],\\n  ['major', 'English Literature'],\\n]);\\n\\nmaxInfoMap.entries();\\n// MapIterator { [\\\"name\\\", \\\"KimMax\\\"],[\\\"age\\\", 25],[\\\"major\\\", \\\"English Literature\\\"]}\\n\\nfor (const [key, value] of maxInfoMap) {\\n  console.log(key, value);\\n}\\n\\n// Result.\\n// \\\"name\\\" \\\"KimMax\\\"\\n// \\\"age\\\" 25\\n// \\\"major\\\" \\\"English Literature\\\"\"), \"\\n        \"), mdx(\"p\", null, \"objects have been traversed using either \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"for...in\"), \" statements or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Object.keys\"), \". Those two traversal methods essentially only traverse the keys of the object's properties, so you have to use those keys to get the object's value back. (This inconvenience is what led to the introduction of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Object.entries\"), \" in ES2017, which returns an iterator of key-value pairs, just like a map object.)\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\",\n    \"theme\": \"one-light\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"const maxInfoObj = {\\n  name: '\\uAE40\\uB9E5\\uC2A4',\\n  age: '25',\\n  major: 'English Literature',\\n};\\n\\n// Use a for in statement\\nfor (key in maxInfoObj) {\\n  console.log(key, maxInfoObj[key]);\\n}\\n\\n// using Object.keys()\\nfor (key of Object.keys(maxInfoObj)) {\\n  console.log(key, maxinfoObj[key]);\\n}\"), \"\\n        \"), mdx(\"h2\", {\n    \"id\": \"when-to-use-it\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#when-to-use-it\",\n    \"aria-label\": \"when to use it permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"When to use it.\"), mdx(\"p\", null, \"Map objects shine when you need to change the properties of an object \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"often\"), \". Their predictable method names make their behavior clear, and unlike traditional objects, they're easy to traverse, making them a good choice for manipulating data. Of course, you don't need to use a map object in every situation, and it's probably better to store information that doesn't change often in an object.\"), mdx(\"h2\", {\n    \"id\": \"reference\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#reference\",\n    \"aria-label\": \"reference permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Reference\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gilbutITbook/007030\"\n  }, \"The Art of Coding in JavaScript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Map\"\n  }, \"MDN - map.prototype\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"JavaScript Map Objects (Map Object)","date":"2020년 03월 29일","description":"An introduction to map objects in JS.","tags":["Javascript"]}},"postSlugList":{"nodes":[{"frontmatter":{"slug":null}},{"frontmatter":{"slug":null}},{"frontmatter":{"slug":null}},{"frontmatter":{"slug":null}},{"frontmatter":{"slug":"coupling"}},{"frontmatter":{"slug":"coupling"}},{"frontmatter":{"slug":"i-definitely-do-sth-wrong"}},{"frontmatter":{"slug":"i-definitely-do-sth-wrong"}},{"frontmatter":{"slug":"retrospect-running"}},{"frontmatter":{"slug":"retrospect-running"}},{"frontmatter":{"slug":"mad-max"}},{"frontmatter":{"slug":"mad-max"}},{"frontmatter":{"slug":"how-to-growth"}},{"frontmatter":{"slug":"how-to-growth"}},{"frontmatter":{"slug":"olivia-rodrigo"}},{"frontmatter":{"slug":"olivia-rodrigo"}},{"frontmatter":{"slug":"2023-flexteam-restrospect"}},{"frontmatter":{"slug":"2023-retorspect"}},{"frontmatter":{"slug":"2023-flexteam-restrospect"}},{"frontmatter":{"slug":"2023-retorspect"}},{"frontmatter":{"slug":"tkdodo-react-query-commentary"}},{"frontmatter":{"slug":"tkdodo-react-query-commentary"}},{"frontmatter":{"slug":"on-stage-best"}},{"frontmatter":{"slug":"on-stage-best"}},{"frontmatter":{"slug":"nodejs-server-monitoring"}},{"frontmatter":{"slug":"nodejs-server-monitoring"}},{"frontmatter":{"slug":"i-can-do-this-all-day"}},{"frontmatter":{"slug":"i-can-do-this-all-day"}},{"frontmatter":{"slug":"retrospect-university"}},{"frontmatter":{"slug":"retrospect-university"}},{"frontmatter":{"slug":"module-federation-shared"}},{"frontmatter":{"slug":"module-federation-shared"}},{"frontmatter":{"slug":"tanjiro"}},{"frontmatter":{"slug":"tanjiro"}},{"frontmatter":{"slug":"module-federation-concepts"}},{"frontmatter":{"slug":"module-federation-concepts"}},{"frontmatter":{"slug":"eternal-sunshine"}},{"frontmatter":{"slug":"eternal-sunshine"}},{"frontmatter":{"slug":"business-driven"}},{"frontmatter":{"slug":"business-driven"}},{"frontmatter":{"slug":"uncertainty"}},{"frontmatter":{"slug":"uncertainty"}},{"frontmatter":{"slug":"runtime-integration-micro-frontends"}},{"frontmatter":{"slug":"runtime-integration-micro-frontends"}},{"frontmatter":{"slug":"tanstack-query-v4-preview"}},{"frontmatter":{"slug":"tanstack-query-v4-preview"}},{"frontmatter":{"slug":"writing-like-that"}},{"frontmatter":{"slug":"writing-like-that"}},{"frontmatter":{"slug":"2022-retorspect"}},{"frontmatter":{"slug":"2022-retorspect"}},{"frontmatter":{"slug":"monorepo-tooling"}},{"frontmatter":{"slug":"monorepo-tooling"}},{"frontmatter":{"slug":"break-up"}},{"frontmatter":{"slug":"break-up"}},{"frontmatter":{"slug":"sustainable-aimless"}},{"frontmatter":{"slug":"sustainable-aimless"}},{"frontmatter":{"slug":"job-searching-retrospect"}},{"frontmatter":{"slug":"job-searching-retrospect"}},{"frontmatter":{"slug":"2021-retorspect"}},{"frontmatter":{"slug":"2021-retorspect"}},{"frontmatter":{"slug":"web-accessiblity-virtuous-cycle"}},{"frontmatter":{"slug":"web-accessiblity-virtuous-cycle"}},{"frontmatter":{"slug":"frontend-tooling-ideas"}},{"frontmatter":{"slug":"frontend-tooling-ideas"}},{"frontmatter":{"slug":"suspense-argibraic-effect"}},{"frontmatter":{"slug":"suspense-argibraic-effect"}},{"frontmatter":{"slug":"packet-travel"}},{"frontmatter":{"slug":"packet-travel"}},{"frontmatter":{"slug":"dev-job-retrospect"}},{"frontmatter":{"slug":"dev-job-retrospect"}},{"frontmatter":{"slug":"redux-store-structure"}},{"frontmatter":{"slug":"redux-store-structure"}},{"frontmatter":{"slug":"react-native-ci-cd"}},{"frontmatter":{"slug":"react-native-ci-cd"}},{"frontmatter":{"slug":"like-legacy"}},{"frontmatter":{"slug":"like-legacy"}},{"frontmatter":{"slug":"what-type-of-developer-am-i"}},{"frontmatter":{"slug":"what-type-of-developer-am-i"}},{"frontmatter":{"slug":"how-to-minimize-redux-saga-typing"}},{"frontmatter":{"slug":"how-to-minimize-redux-saga-typing"}},{"frontmatter":{"slug":"how-to-use-redux-saga"}},{"frontmatter":{"slug":"how-to-use-redux-saga"}},{"frontmatter":{"slug":"github-actions-slack-bot"}},{"frontmatter":{"slug":"github-actions-slack-bot"}},{"frontmatter":{"slug":"frontend-infrastructure"}},{"frontmatter":{"slug":"frontend-infrastructure"}},{"frontmatter":{"slug":"react-query-preview"}},{"frontmatter":{"slug":"react-query-preview"}},{"frontmatter":{"slug":"keyboard-input"}},{"frontmatter":{"slug":"keyboard-input"}},{"frontmatter":{"slug":"precedent-bot-retrospect"}},{"frontmatter":{"slug":"precedent-bot-retrospect"}},{"frontmatter":{"slug":"nuxt-ssr"}},{"frontmatter":{"slug":"nuxt-ssr"}},{"frontmatter":{"slug":"async-console-log"}},{"frontmatter":{"slug":"async-console-log"}},{"frontmatter":{"slug":"thought-ts"}},{"frontmatter":{"slug":"thought-ts"}},{"frontmatter":{"slug":"dev-job-after-junior"}},{"frontmatter":{"slug":"dev-job-after-junior"}},{"frontmatter":{"slug":"protect-var-against-undefined"}},{"frontmatter":{"slug":"protect-var-against-undefined"}},{"frontmatter":{"slug":"school-personal-project"}},{"frontmatter":{"slug":"school-personal-project"}},{"frontmatter":{"slug":"vue-comp-test"}},{"frontmatter":{"slug":"vue-comp-test"}},{"frontmatter":{"slug":"dom-pos-scroll"}},{"frontmatter":{"slug":"dom-pos-scroll"}},{"frontmatter":{"slug":"2020-retorspect"}},{"frontmatter":{"slug":"2020-retorspect"}},{"frontmatter":{"slug":"function-props-vuejs"}},{"frontmatter":{"slug":"function-props-vuejs"}},{"frontmatter":{"slug":"cra-webpack-config"}},{"frontmatter":{"slug":"cra-webpack-config"}},{"frontmatter":{"slug":"react-component-this"}},{"frontmatter":{"slug":"react-component-this"}},{"frontmatter":{"slug":"git-start"}},{"frontmatter":{"slug":"git-start"}},{"frontmatter":{"slug":"js-pure-function"}},{"frontmatter":{"slug":"js-pure-function"}},{"frontmatter":{"slug":"hufs-semester-clock"}},{"frontmatter":{"slug":"hufs-semester-clock"}},{"frontmatter":{"slug":"js-map"}},{"frontmatter":{"slug":"js-map"}},{"frontmatter":{"slug":"why-dev"}},{"frontmatter":{"slug":"why-dev"}}]}},"pageContext":{"id":"f17c57d7-8dba-587f-9b86-192dd95a50d3","frontmatter__slug":"js-map","__params":{"frontmatter__slug":"js-map"}}},"staticQueryHashes":["1865044719"]}