{"version":3,"file":"component---src-pages-index-tsx-a3a459189da46ff458ba.js","mappings":"iLAEWA,EAAqB,CAAC,QAAU,UAAUC,KAAK,mBCWnD,SAASC,EAAT,GAA8C,IAApBC,EAAmB,EAAnBA,SACzBC,GAAiBC,EAAAA,EAAAA,IAAiB,SAACC,GAAD,OAAWA,EAAMC,QAAlB,IACjCC,GAAcH,EAAAA,EAAAA,IAAiB,SAACC,GAAD,OAAWA,EAAME,WAAlB,IAG9BC,GAAyBC,EAAAA,EAAAA,UAAQ,WACrC,IAAMC,EAAM,CACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,QAAS,GASX,OANAZ,EAASa,SAAQ,SAACC,GAChB,IAAMV,EAAWU,EAAKC,YAAYX,SAClCI,EAAIJ,IAAa,EACjBI,EAAG,KAAW,CAHhB,IAMOA,CAd6B,GAenC,CAACR,IAEJ,OACEgB,EAAAA,cAAAA,MAAAA,CAAKC,UDjC8B,WCkChCC,EAAAA,EAAAA,KAAkB,SAACd,GAAD,OACjBY,EAAAA,cAAAA,SAAAA,CACEC,UAAWpB,EAAmBI,IAAmBG,EAAW,OAAS,WACrEe,IAAKf,EACLgB,QAAS,WACPf,EAAYD,EAJhB,GAOEY,EAAAA,cAAAA,OAAAA,KAAOZ,GACPY,EAAAA,cAAAA,OAAAA,CAAMC,UD7CqB,WC6C3B,IAA4CX,EAAuBF,GAAnE,KATH,IAcN,C,uKCrCKiB,EAAO,KAoDAC,EAAO,WAClB,OAAON,EAAAA,cAACO,EAAAA,EAAD,CAAYC,KAAMH,GADpB,EAIP,UA9CkB,SAAC,GAAoB,IAAlBI,EAAkB,EAAlBA,KAInB,OAHAC,EAAAA,EAAAA,GAAWL,IACXM,EAAAA,EAAAA,KAAa,SAACxB,GAAD,OAAWA,EAAMyB,OAAlB,GAAZD,CAAuCN,GAGrCL,EAAAA,cAACa,EAAAA,EAAD,CACEC,OAAQd,EAAAA,cAACe,EAAAA,EAAD,MACRC,IACEhB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACiB,EAAAA,EAAD,MACAjB,EAAAA,cAACjB,EAAAA,EAAD,CAAgBC,SAAUyB,EAAKS,OAAOC,SAG1CC,OAAQpB,EAAAA,cAACqB,EAAAA,EAAD,OAERrB,EAAAA,cAACsB,EAAAA,EAAD,CAAUtC,SAAUyB,EAAKS,OAAOC,QAftC,C","sources":["webpack://max-kim-tech-blog/./src/components/PostCategory.css.ts","webpack://max-kim-tech-blog/./src/components/PostCategory.tsx","webpack://max-kim-tech-blog/./src/pages/index.tsx"],"sourcesContent":["import \"src/components/PostCategory.css.ts.vanilla.css!=!../../node_modules/.pnpm/@vanilla-extract+webpack-plugin@2.3.2_bst2d3c3zvqb2pmjskwxrqvuxe/node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/PostCategory.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Lmo0NGhjczAgewogIG1hcmdpbi10b3A6IDEycHg7Cn0KLmo0NGhjczEgewogIG1hcmdpbi1yaWdodDogMTJweDsKICBmb250LXNpemU6IDE4cHg7CiAgY3Vyc29yOiBwb2ludGVyOwogIGxldHRlci1zcGFjaW5nOiAwLjVweDsKfQouajQ0aGNzMyB7CiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7CiAgdGV4dC1kZWNvcmF0aW9uLXRoaWNrbmVzczogMS44cHg7CiAgdGV4dC11bmRlcmxpbmUtb2Zmc2V0OiAzLjdweDsKfQouajQ0aGNzNCB7CiAgZm9udC1zaXplOiAxNnB4Owp9\\\"}!../../node_modules/.pnpm/@vanilla-extract+webpack-plugin@2.3.2_bst2d3c3zvqb2pmjskwxrqvuxe/node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var categoryChipsCountStyle = 'j44hcs4';\nexport var categoryChipsStyle = {'default':'j44hcs1',here:'j44hcs3 j44hcs1'};\nexport var categoryChipsWrapperStyle = 'j44hcs0';","import React from 'react';\nimport { CATEGORY_LIST, useCategoryStore } from '../store/categoryStore';\nimport { BlogPosts, type PostCategory } from '../types';\nimport { useMemo } from 'react';\nimport {\n  categoryChipsWrapperStyle,\n  categoryChipsStyle,\n  categoryChipsCountStyle,\n} from './PostCategory.css';\ninterface Props {\n  postList: BlogPosts;\n}\n\nexport function PostCategories({ postList }: Props) {\n  const curentCategory = useCategoryStore((state) => state.category);\n  const setCategory = useCategoryStore((state) => state.setCategory);\n\n  // TODO 페이지별 연산\n  const postByCategoryCountMap = useMemo(() => {\n    const map = {\n      all: 0,\n      tech: 0,\n      essay: 0,\n      culture: 0,\n    };\n\n    postList.forEach((post) => {\n      const category = post.frontmatter.category as PostCategory;\n      map[category] += 1;\n      map['all'] += 1;\n    });\n\n    return map;\n  }, [postList]);\n\n  return (\n    <div className={categoryChipsWrapperStyle}>\n      {CATEGORY_LIST.map((category) => (\n        <button\n          className={categoryChipsStyle[curentCategory === category ? 'here' : 'default']}\n          key={category}\n          onClick={() => {\n            setCategory(category);\n          }}\n        >\n          <span>{category}</span>\n          <span className={categoryChipsCountStyle}>({postByCategoryCountMap[category]})</span>\n        </button>\n      ))}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport PostList from '../components/PostList/PostList';\nimport CustomHead from '../components/Head';\nimport { type BlogPosts } from '../types';\nimport MenuBar from '../components/MenuBar/MenuBar';\nimport { PostCategories } from '../components/PostCategory';\nimport { useLangStore } from '../store/langStore';\nimport { initialize } from '../i18n/initialize';\n\nconst LANG = 'ko';\n\nexport interface Props {\n  data: {\n    allMdx: {\n      nodes: BlogPosts;\n    };\n  };\n}\n\nconst IndexPage = ({ data }: Props) => {\n  initialize(LANG);\n  useLangStore((state) => state.setLang)(LANG);\n\n  return (\n    <Layout\n      header={<Header />}\n      nav={\n        <>\n          <MenuBar />\n          <PostCategories postList={data.allMdx.nodes} />\n        </>\n      }\n      footer={<Footer />}\n    >\n      <PostList postList={data.allMdx.nodes} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { lang: { eq: \"ko\" }, title: { nin: [\"about\", \"pic\"] } } }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY년 MM월 DD일\")\n          description\n          tags\n          lang\n          category\n          slug\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return <CustomHead lang={LANG} />;\n};\n\nexport default IndexPage;\n"],"names":["categoryChipsStyle","here","PostCategories","postList","curentCategory","useCategoryStore","state","category","setCategory","postByCategoryCountMap","useMemo","map","all","tech","essay","culture","forEach","post","frontmatter","React","className","CATEGORY_LIST","key","onClick","LANG","Head","CustomHead","lang","data","initialize","useLangStore","setLang","Layout","header","Header","nav","MenuBar","allMdx","nodes","footer","Footer","PostList"],"sourceRoot":""}